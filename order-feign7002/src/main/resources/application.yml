server:
  port: 7002
seata:
  registry:
    type: nacos
    nacos:
      server-addr: 127.0.0.1:8848
      namespace: ""
      group: SEATA_GROUP
      application: seata-server
  tx-service-group: default_tx_group
  service:
    vgroup-mapping:
      default_tx_group: default
  data-source-proxy-mode: AT
spring:
  application:
    name: order-feign
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/seata_order?useSSL=false&useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
    username: root
    password: 123.com
  profiles:
    active: default
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848
    loadbalancer:
      nacos:
        enabled: true
    #    #启用consul服务注册和发现
    #    consul:
    #      host: localhost
    #      port: 8500
    #      discovery:
    #        prefer-ip-address: true
    #        service-name: ${spring.application.name}
    sentinel:
      transport:
        dashboard: localhost:8080
        port: 8719                      #默认8719,占用则+1搜索,直到空闲
      log:
        dir: D:\Development\SpringCloudModules\Sentinel\logs
      web-context-unify: true           #controller对service是否认为是同一个链路, 默认true
    #设置openfeign接口调用
    openfeign:
      # openfeign超时设置
      client:
        config:
          default:
            connect-timeout: 60000
            read-timeout: 60000
      #设置openfeign启用httpclient5
      httpclient:
        hc5:
          enabled: true
      #设置openfeign的请求和响应压缩
      compression:
        request:
          enabled: true
          min-request-size: 2048
        response:
          enabled: true
    #启用断路器
  #      circuitbreaker:
  #        enabled: true
  #        group:
  #          enabled: true
  #设置openfeign的日志级别以及监控哪个接口
logging:
  level:
    io:
      seata: info
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.test.cloud.entities
#      com:
#        test:
#          cloud:
#            apis:
#              PayFeignApi: debug

#断路器实现
#resilience4j:
#  timelimiter:
#    configs:
#      default:
#        timeout-duration: 10s               #默认限制远程1s,超出1s即超时且走降级
#  circuitbreaker:
#    configs:
#      default:
#        failure-rate-threshold: 50          #设置多少失败率打开断路器, 单位: %
#        slow-call-duration-threshold: 2s    #慢调用阈值,超出即为慢调用
#        slow-call-rate-threshold: 30        #慢调用百分比峰值, 高于此阈值打开断路器
#        sliding-window-type: time_based     #滑动窗口类型, count_based, time_based
#        sliding-window-size: 2              #滑动窗口大小, 使用count表示请求数, 使用time表示秒数
#        minimum-number-of-calls: 2          #断路器计算失败率所需最小样本数
#        automatic-transition-from-open-to-half-open-enabled: true   #是否从开启过渡到半开启
#        wait-duration-in-open-state: 7s     #从开启到半开启的等待时间
#        permitted-number-of-calls-in-half-open-state: 2             #半开启状态允许的最大请求数
#        record-exceptions:
#          - java.lang.Exception
#  ratelimiter:
#    configs:
#      default:
#        limit-for-period: 2           #一次刷新周期内,最大允许请求值
#        limit-refresh-period: 1s      #限流器刷新间隔
#        timeout-duration: 1           #线程等待权限的默认时间
#    #设置使用断路器的服务实例
#    instances:
#      provider-payment:
#        base-config: default  #使用上述default配置
##引入zipkin
#management:
#  zipkin:
#    tracing:
#      endpoint: http://localhost:9411/api/v2/spans
#  tracing:
#    sampling:
#      probability: 1.0 #采样率默认为0.1(0.1就是10次只能有一次被记录下来)，值越大收集越及时。
#feign:
#  sentinel:
#    enabled: true
